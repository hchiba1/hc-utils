#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM file message ...
git pull, add, commit and push
-a: commit message is 'add new_file'
-c: commit but not push
";

my %OPT;
getopts('ac', \%OPT);

my ($FILE, @MESSAGE) = @ARGV;
my $MESSAGE = "@MESSAGE";

if (@ARGV == 1) {
    if ($OPT{a}) {
        $MESSAGE = "Add $FILE";
    } else {
        $MESSAGE = "Update $FILE";
    }
} elsif (@ARGV < 2) {
    print STDERR $USAGE;
    exit 1;
}

if (!$OPT{c}) {
    print "[fetch]\n";
    system "git fetch origin";
    my $diff_exit_code = system("git diff HEAD..FETCH_HEAD --exit-code --quiet") >> 8;
    if ($diff_exit_code) {
        print "\n";
        print "[merge]\n";
        my $pull_exit_code = system("git merge") >> 8;
        if ($pull_exit_code) {
            die "merge failed.\n";
        } else {
            print "OK\n";
        }
        print "\n";
    } else {
        print "OK\n";
        print "\n";
    }
}

print "[add]\n";
my $add_exit_code = system("git add $FILE") >> 8;
if ($add_exit_code) {
    die "add failed.\n";
} else {
    print "$FILE\n";
    print "OK\n";
}
print "\n";

print "[commit]\n";
my $commit_exit_code = system("git commit -m '$MESSAGE'") >> 8;
if ($commit_exit_code) {
    die "commit failed.\n";
} else {
    print "OK\n";
}

if (!$OPT{c}) {
    print "\n";
    print "[push]\n";
    my $push_exit_code = system("git push origin HEAD") >> 8;
    if ($push_exit_code) {
        die "push failed.\n";
    } else {
        print "OK\n";
    }
}
