#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
use JSON;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM [options] ID
    -1: print in one line
    -l FILE: list of IDs
    -R: RefSeq only
    -t: tabular output
    -q: print command and quit
";

my %OPT;
getopts('1l:Rtq', \%OPT);

my $COMMAND = "datasets summary genome";
my $ID = "";

if ($OPT{l}) {
    $COMMAND .= " accession --inputfile $OPT{l}";
} elsif (@ARGV) {
    if ($ARGV[0] =~ /^GC[AF]_/) {
        $COMMAND .= " accession";
        $ID = $ARGV[0];
    } else {
        $COMMAND .= " taxon";
        $ID = $ARGV[0];
    }
} else {
    print STDERR $USAGE;
    exit 1;
}
$COMMAND .= " --as-json-lines";
if ($OPT{R}) {
    $COMMAND .= " --assembly-source RefSeq";
}

if ($OPT{q}) {
    print STDERR "> $COMMAND $ID\n";
    exit 1;
}

if ($OPT{t}) {
    my @line = `$COMMAND $ID`;
    chomp(@line);
    my @header = qw(
        accession
        organism_name
        common_name
        complete 
        assembly_level
        sequencing_tech
        release_date submitter
        );
    print join("\t", @header), "\n";
    for my $line (@line) {
        my $json = decode_json($line);
        my @out = (
            $json->{accession},
            $json->{organism}{organism_name},
            $json->{organism}{common_name},
            $json->{annotation_info}{busco}{complete},
            $json->{assembly_info}{assembly_level},
            $json->{assembly_info}{sequencing_tech} || "",
            $json->{assembly_info}{release_date},
            $json->{assembly_info}{submitter},
            );
        print join("\t", @out), "\n";
    }
} elsif ($OPT{1}) {
    system "$COMMAND $ID | less -S";
} else {
    system "$COMMAND $ID | jq -C | less -R";
}
