#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
";

my %OPT;
getopts('lN:S:Vvn:S:s:1', \%OPT);

my $COMMAND;
if (-f "$ENV{HOME}/pkg/speedtest-cli/speedtest.py") {
    $COMMAND = "~/pkg/speedtest-cli/speedtest.py";
} elsif (-f "$ENV{HOME}/github/sivel/speedtest-cli/speedtest.py") {
    $COMMAND = "~/github/sivel/speedtest-cli/speedtest.py";
} else {
    system "github -prh sivel/speedtest-cli";
    $COMMAND = "~/github/sivel/speedtest-cli/speedtest.py";
}

if ($OPT{l}) {
    system "$COMMAND --list";
    exit;
}

if ($OPT{N}) {
    system "$COMMAND --list | grep -iw '$OPT{N}'";
    exit;
}

my ($number, $description);
if ($OPT{S}) {
    $number = $OPT{S};
    $description = select_server($number);
} else {
    # ($number, $description) = extract_server("OPEN Project .*");
    ($number, $description) = extract_server(".*Tokyo.*");
}

### Testing
if ($OPT{V}) {
    system "$COMMAND --server $number";
} elsif ($OPT{v}) {
    print "Server:   $description\n";
    print "Testing...";
    my @line = `$COMMAND --server $number --simple`;
    print "\n";
    # for my $line (@line) {
    # 	if ($line =~ /^(Ping:) (.*)/) {
    # 	    print $1, "   ", $2, "\n";
    # 	} elsif ($line =~ /^(Upload:) (.*)/) {
    # 	    print $1, "    ", $2, "\n";
    # 	} elsif ($line =~ /^(Download:) (.*)/) {
    # 	    print $1, "  ", $2, "\n";
    # 	} else {
    # 	    print $line;
    # 	}
    # }
    my ($ping, $upload, $download) = extract_speed(@line);
    print "Ping   $ping:\n";
    print "Download  $download:\n";
    print "Upload    $upload:\n";
} elsif ($OPT{n}) {
    printf "                     %-11s%-15sUpload\n", "Ping", "Download";
    for (my $i=0; $i<$OPT{n}; $i++) {
	my $date_time = `date '+%F %T'`;
	chomp($date_time);
	my @line = `$COMMAND --server $number --simple`;
	printf "$date_time  %-11s%-15s%s\n", extract_speed(@line);
    }
} elsif ($OPT{s}) {
    # print "Date       Time      ";
    printf "                     %-11s%-15sUpload\n", "Ping", "Download";
    while (1) {
	my $date_time = `date '+%F %T'`;
	chomp($date_time);
	my @line = `$COMMAND --server $number --simple`;
	my ($ping, $upload, $download) = extract_speed(@line);
	printf "$date_time  %-11s%-15s$upload\n", $ping, $download;
	sleep $OPT{s};
    }
} else {
    my $date_time = `date '+%F %T'`;
    chomp($date_time);
    print "$date_time\n";
    my @line = `$COMMAND --server $number --simple`;
    my ($ping, $upload, $download) = extract_speed(@line);

    
    # print "Ping:   $ping\n";

    # print "Ping:      $ping\n";
    # print "Upload:    $upload\n";
    # print "Download:  $download\n";

    # printf "Ping  $ping\n";
    # printf "Ping    $ping\n";
    # printf "Ping       $ping\n";
    printf "Ping     %9s\n", $ping;
    printf "Download %13s\n", $download;
    printf "Upload   %13s\n", $upload;
}

################################################################################
### Functions ##################################################################
################################################################################
sub extract_speed {
    my @line = @_;
    
    my ($ping, $download, $upload);
    for my $line (@line) {
	if ($line =~ /^Ping: (.*)/) {
	    $ping = $1;
	} elsif ($line =~ /^Download: (.*)/) {
	    $download = $1;
	} elsif ($line =~ /^Upload: (.*)/) {
	    $upload = $1;
	}
    }

    return ($ping, $download, $upload);
}

sub extract_server {
    my ($pattern) = @_;
    
    my @list = `$COMMAND --list 2>&1`;

    my $number = "";
    my $description = "";
    for my $server (@list) {
	# if ($server =~ /^\s*(\d+)\) +($pattern .*)/) {
	if ($server =~ /^\s*(\d+)\) +($pattern)/) {
	    $number = $1;
	    $description = $2;
	    last;
	}
    }

    if ($number !~ /^\d+$/) {
	die @list;
    }

    return ($number, $description);
}

sub select_server {
    my ($number) = @_;
    
    my @list = `$COMMAND --list 2>&1`;

    my $description = "";
    for my $server (@list) {
	if ($server =~ /^\s*$number\) +(\S.*)/) {
	    $description = $1;
	    last;
	}
    }

    if ($description eq "") {
	die @list;
    }

    return ($description);
}
