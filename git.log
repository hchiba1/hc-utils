#!/usr/bin/perl -w
use strict;
use File::Basename;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
-t: align column
-n: show full names
-s: --stat option with conversion
-S: --stat option original
";

###         hash [date](desc)subj <mail>name
# my $FORMAT = "%h%x09[%ai]%d %s%x09<%ae>";
my $FORMAT = "%h%x09[%ai] %s%x09<%ae>";

my $OPT_CONVERT = 0;
for (my $i=0; $i<@ARGV; $i++) {
    if ($ARGV[$i] eq "-s" or $ARGV[$i] eq "-S") {
        if ($ARGV[$i] eq "-s") {
            $OPT_CONVERT = 1;
        }
        splice(@ARGV, $i, 1);
        unshift(@ARGV, "--stat");
        # $FORMAT = "(%h)%x09[%ai]%d %s%x09<%ae>";
        $FORMAT = "(%h)%x09[%ai] %s%x09<%ae>";
        last;
    }
}

my $OPT_TAB = 0;
for (my $i=0; $i<@ARGV; $i++) {
    if ($ARGV[$i] eq "-t") {
        splice(@ARGV, $i, 1);
        $OPT_TAB = 1;
        last;
    }
}

for (my $i=0; $i<@ARGV; $i++) {
    if ($ARGV[$i] eq "-n") {
        splice(@ARGV, $i, 1);
        $FORMAT .= " %an";
        last;
    }
}

$FORMAT .= "%d";

my $COMMAND = "git log --graph --format='$FORMAT' @ARGV";
if ($OPT_CONVERT && $OPT_TAB) {
    $COMMAND .= " | convert_log.pl -t | align_column";
} else {
    if ($OPT_TAB) {
        $COMMAND .= " | align_column";
    }
    if ($OPT_CONVERT) {
        $COMMAND .= " | convert_log.pl";
    }
}
system "$COMMAND"
