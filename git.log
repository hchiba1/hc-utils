#!/usr/bin/perl -w
use strict;
use File::Basename;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
-n: show full names
-s: --stat option
";

###         hash [date](desc)subj <mail>name
my $FORMAT = "%h%x09[%ai]%d %s%x09<%ae>";

my $CONVERT = 0;
for (my $i=0; $i<@ARGV; $i++) {
    if ($ARGV[$i] eq "-s" or $ARGV[$i] eq "-S") {
        if ($ARGV[$i] eq "-s") {
            $CONVERT = 1;
        }
        splice(@ARGV, $i, 1);
        unshift(@ARGV, "--stat");
        $FORMAT = "(%h)%x09[%ai]%d %s%x09<%ae>";
        last;
    }
}

for (my $i=0; $i<@ARGV; $i++) {
    if ($ARGV[$i] eq "-n") {
        splice(@ARGV, $i, 1);
        $FORMAT .= " %an";
        last;
    }
}

if ($CONVERT) {
    my @line = `git log --graph --format='$FORMAT' @ARGV`;
    chomp(@line);
    my $current = "";
    my $printed = 0;
    for my $line (@line) {
        $printed = print_current_or_next($current, $line);
        $current = $line;
    }
    if ($printed == 0) {
        print $current;
    }
} else {
    system "git log --graph --format='$FORMAT' @ARGV"
}

################################################################################
### Functions ##################################################################
################################################################################
sub print_current_or_next {
    my ($current, $next) = @_;

    if ($current eq "") {
        return 0;
    }

    if ($current =~ /^([*|\/ \\]+) \([0-9a-f]{7}\)\t\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} \S{5}\] /
        # or $next =~ /^([*|\/ \\]+) \([0-9a-f]{7}\)\t\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} \S{5}\] /
        ) {
        print $current, "\n";
        return 1;
    }

    if (
        # $next =~ /^([*|\/ \\]+)\d+ files? changed, /
        $next =~ /^([*|\/ \\]+) \([0-9a-f]{7}\)\t\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2} \S{5}\] /
        ) {
        if ($current =~ /^([*|\/ \\]+)\w?.*$/) {
            my $current_bar_only = $1;
            print $current_bar_only, "\n";
            return 1;
        } else {
            die;
        }
    }

    if ($current =~ /^([*|\/ \\]+)(.*)$/) {
        my ($current_bar, $current_comment) = ($1, $2);
        if ($next =~ /^[*|\/ \\]+(.*)$/) {
            my $next_comment = $1;
            if ($current_comment eq "") {
                print "$current_bar $next_comment\n";
            } else {
                print $current_bar, $next_comment, "\n";
            }
            return 2;
        } else {
            print $current, "\n";
            return 1;
        }
    } else {
        die $current;
    }

    die $current;
}
