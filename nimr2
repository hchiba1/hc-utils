#!/usr/bin/perl -w
use strict;
use File::Basename;
use File::Path;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM [-d] FILE.nim
-d: debug
";

my %OPT;
getopts('d', \%OPT);

if (!@ARGV) {
    print STDERR $USAGE;
    exit 1;
}
my $NIM_FILE = shift @ARGV;

my $BINARY_FILE = get_binary_file_path($NIM_FILE);

if ($OPT{d}) {
    system "nim compile --run --out:$BINARY_FILE $NIM_FILE";
} elsif (-f $BINARY_FILE && (stat $BINARY_FILE)[9] > (stat $NIM_FILE)[9]) {
    system "$BINARY_FILE @ARGV";
} else {
    my $result = `nim compile --out:$BINARY_FILE $NIM_FILE 2>&1`;
    if ($? >> 8) {
        print STDERR $result;
        exit($? >> 8);
    }
    system "$BINARY_FILE @ARGV";
}

################################################################################
### Function ###################################################################
################################################################################

sub get_binary_file_path {
    my ($nim_file) = @_;

    if (! -e $nim_file) {
        die "ERROR: $nim_file: $!";
    }
    
    if ($nim_file =~ /^(.+)\.nim$/) {
        my $prefix = $1;
        my $directory = dirname($prefix);
        my $program_name = basename($prefix);

        if ($directory =~ /^src$/ || $directory =~ /\/src$/) {
            $directory =~ s/src$/bin/;
        }

        if ($^O eq "linux") {
            $directory .= "/linux";
        } elsif ($^O eq "darwin") {
            $directory .= "/mac"
        } elsif ($^O eq "dos") {
            $directory .= "/win"
        } else {
            die;
        }
        if (! -e $directory) {
            mkpath($directory) || die "$directory: $!";
        }

        return "$directory/$program_name";
    } else {
        print STDERR $USAGE;
        exit 1;
    }
}
