#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
";

my %OPT;
getopts('', \%OPT);

my @file = (
    ".git/objects/*/*",
    ".git/COMMIT_EDITMSG",
    ".git/HEAD",
    ".git/FETCH_HEAD",
    ".git/ORIG_HEAD",
    ".git/refs/*/*",
    ".git/refs/*/*/*"
    );
my @line = `ls -lrtdF --full-time @file 2>/dev/null | sed 's/\\.[0-9]\\+ \\S\\+//'`;
chomp(@line);

for my $line (@line) {
    if ($line =~ /\/$/ || $line =~ /tags/) {
        next;
    }
    my @f = split(/\s+/, $line);
    my $contents = `cat $f[7]`;
    chomp($contents);
    if ($contents eq "") {
        print "$line\n";
    } elsif ($line =~ /objects/) {
        if ($line =~ /^(.+)(.git\/objects\/\w\w\/.*)$/) {
            my ($prefix, $object) = ($1, $2);
            $object =~ s|^.git/objects/||;
            $object =~ s|/||;
            my $type = get_type($object);
            print "$prefix\[$type\]\t$object\n";
        }
    } else {
        my @content = split("\n", $contents);
        print "$line";
        for my $c (@content) {
            print "\t$c\n";
        }
    }
}

################################################################################
### Functions ##################################################################
################################################################################
sub get_type {
    my ($object) = @_;

    my $type = `git cat-file -t $object`;
    chomp($type);

    if ($type eq "blob") {
        return "file";
    } elsif ($type eq "tree") {
        return "directory";
    } elsif ($type eq "commit") {
        return "history";
    } elsif ($type eq "tag") {
        return "tag";
    } else {
        return "";
    }
}
