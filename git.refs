#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
";

my %OPT;
getopts('si', \%OPT);

my $fh;
if ($OPT{s}) {
    open($fh, "| sort -k6,7 -k8.5,8.5") || die;
} else {
    $fh = *STDOUT;
}

my %NAME = ();
my $index_out = "";
my @index = `git ls-files --stage`;
chomp(@index);
for my $index (@index) {
    my ($prefix, $file) = split("\t", $index);
    my ($permisson, $object, $num) = split(/\s+/, $prefix);
    my $type = get_type($object);
    $index_out .= "$permisson $num [$type] $file\t$object\n";
    $NAME{$object} = $file;
}

my @file = (
    ".git/[A-Z]*",
    ".git/refs/*/*",
    ".git/refs/*/*/*"
    );
my @line = `ls -lrtdF --full-time @file 2>/dev/null | sed 's/\\.[0-9]\\+ \\S\\+//'`;
chomp(@line);

my %REFS = ();
my %CHECK_REFS = ();
my %HEAD;
for my $line (@line) {
    if ($line =~ /\/$/ || $line =~ /tags/) {
        next;
    }
    my @f = split(/\s+/, $line);
    my $file = $f[7];
    my $contents = `cat $file`;
    chomp($contents);
    if ($contents eq "") {
        print $fh "$line\n";
    } else {
        my @content = split("\n", $contents);
        print $fh "$line";
        if (@content == 1) {
            print $fh "\t$content[0]";
            add_ref($content[0], $file);
        }
        print $fh "\n";
    }
}

my @object = `ls -lrtdF --full-time .git/objects/*/* 2>/dev/null | sed 's/\\.[0-9]\\+ \\S\\+//'`;
chomp(@object);
my $start = 0;
if (@ARGV && $ARGV[0] =~ /^\d+$/ && @object > $ARGV[0]) {
    $start = @object - $ARGV[0];
}
for (my $i=$start; $i<@object; $i++) {
    if ($object[$i] =~ /^(.+)(.git\/objects\/\w\w\/.*)$/) {
        my ($prefix, $object) = ($1, $2);
        $object =~ s|^.git/objects/||;
        $object =~ s|/||;
        my $type = get_type($object);
        print $fh "$prefix\[$type\]\t$object";
        print_refs($fh, $object);
        if ($NAME{$object}) {
            my $name = $NAME{$object};
            print $fh " $name";
        }
        print $fh "\n";
    }
}

if ($OPT{s}) {
    close($fh);
}

print "\n";
system "ls -l --full-time .git/index 2>/dev/null | sed 's/\\.[0-9]\\+ \\S\\+//'";
if ($OPT{i}) {
    print $index_out;
}

################################################################################
### Functions ##################################################################
################################################################################
sub get_type {
    my ($object) = @_;

    my $type = `git cat-file -t $object`;
    chomp($type);

    if ($type eq "blob") {
        return "file";
    } elsif ($type eq "tree") {
        return "directory";
    } elsif ($type eq "commit") {
        return "history";
    } elsif ($type eq "tag") {
        return "tag";
    } else {
        return "";
    }
}

sub add_ref {
    my ($hash, $ref) = @_;

    if ($hash =~ /ref: refs\/heads\/(\S+)/) {
        my $branch = $1;
        $HEAD{$branch} = 1;
    }

    $ref =~ s/.*\///;
    if (!$CHECK_REFS{$hash}{$ref}) {
        if ($REFS{$hash}) {
            push @{$REFS{$hash}}, $ref;
        } else {
            $REFS{$hash} = [$ref];
        }
        $CHECK_REFS{$hash}{$ref} = 1;
    }
}

sub print_refs {
    my ($fh, $object) = @_;

    if ($REFS{$object}) {
        my @ref = @{$REFS{$object}};
        my $refs = join(", ", @ref);
        print $fh " ($refs)";
        for my $ref (@ref) {
            if ($HEAD{$ref}) {
                print $fh " <- HEAD";
            }
        }
    }
}
