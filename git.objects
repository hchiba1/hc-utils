#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
-o: show object IDs
-t: show type
-p: show file conent
";

my %OPT;
getopts('otpd', \%OPT);

my @line = `ls -lrt --full-time .git/objects/*/* | sed 's/\\.[0-9]\\+ \\S\\+//'`;
chomp(@line);

for my $line (@line) {
    if ($line =~ /^(.+)(.git\/objects\/\w\w\/.*)$/) {
        my ($prefix, $object) = ($1, $2);
        $object =~ s|^.git/objects/||;
        $object =~ s|/||;
        if ($OPT{o}) {
            $line = "$prefix$object";
        }
        my $add_len = 0;
        if (length($line) > 100) {
            $add_len = length($line) - 100;
        }
        my $type = "";
        if ($OPT{t} || $OPT{p}) {
            $type = get_type($object);
        }
        if ($OPT{p}) {
            my $pad = '=' x (9 - length($type));
            print "===[ $type ]$pad====================================================================================";
            print "=" x $add_len;
            print "\n";
        }
        print "$line";
        if ($OPT{t} && !$OPT{p}) {
            print " [$type]";
        }
        print "\n";
        if ($OPT{p}) {
            print "====================================================================================================";
            print "=" x $add_len;
            print "\n";
            system "git cat-file -p $object";
            if ($type eq "file") {
                print "\n";
            }
        }
    }
}

sub get_type {
    my ($object) = @_;

    my $type = `git cat-file -t $object`;
    chomp($type);

    if ($type eq "blob") {
        return "file";
    } elsif ($type eq "tree") {
        return "directory";
    } elsif ($type eq "commit") {
        return "history";
    } elsif ($type eq "tag") {
        return "tag";
    } else {
        return "";
    }
}
