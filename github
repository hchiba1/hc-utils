#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
# use File::Spec;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM [OPTIONS] user/repos
-l: list local repositories
-h: use under HOME/github/
-d DIR: make DIR and use under it
-r: make username/repo
-p: preserve time stamp

ex.)
 \$ $PROGRAM -prh user/repos

Dependency: 
  need git.revert.timestamp.pl for -p option
";

my $SCRIPT_REVERT = "git.revert.timestamp.pl";

my %OPT;
getopts('prd:hl', \%OPT);

if ($OPT{l}) {
    system "cd ~/github; ls -d1 */*";
    exit 0;
}

if (@ARGV != 1) {
    print STDERR $USAGE;
    exit 1;
}
my ($USER_REPO) = @ARGV;

if ($OPT{h}) {
    my $dir = "$ENV{HOME}/github";
    if (!-e $dir) {
        mkdir($dir) || die "ERROR: $dir: $!";
    }
    chdir($dir)
} elsif ($OPT{d}) {
    my $dir = $OPT{d};
    if (!-e $dir) {
        mkdir($dir) || die;
    }
    chdir($dir)
}

if ($USER_REPO =~ /^([-\w\.]+)\/([-\w\.]+)$/) {
    my ($user, $repo) = ($1, $2);
    if ($OPT{r}) {
        if (!-e $user) {
            mkdir($user) || die;
        }
        chdir($user) || die;
    }
    system "git clone git\@github.com:$USER_REPO";
    if (-d $repo) {
        chdir($repo) || die;
        if ($OPT{p}) {
            # if (-x File::Spec->rel2abs($SCRIPT_REVERT)) {
            system $SCRIPT_REVERT;
            # } else {
            # 	print STDERR "WARNING: cannot find $SCRIPT_REVERT\n";
            # 	exit 1;
            # }
        }
    }
} else {
    die "ERROR: specify user/repo instead of $USER_REPO\n";
}
