#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM
";

my %OPT;
getopts('asd', \%OPT);

my @dir = `ls $ENV{HOME}/github/`;
chomp(@dir);

for my $dir (@dir) {
    chdir("$ENV{HOME}/github/$dir/") || die "$!";
    my @repo = `ls`;
    chomp(@repo);

    for my $repo (@repo) {
        print_repo($dir, $repo);
    }
}

if ($OPT{a}) {
    @dir = ("etc");
    for my $dir (@dir) {
        chdir("$ENV{HOME}/$dir") || die "$dir: $!";
        my @repo = ('hc-utils', 'hc-elisp', 'virt-utils', 'pg-utils', 'spang', 'sparqling-mode', 'sparqlet');
        for my $repo (@repo) {
            print_repo($dir, $repo);
        }
    }
}

################################################################################
### Function ###################################################################
################################################################################

sub print_repo {
    my ($dir, $repo) = @_;

    my $status = `cd $repo; git status -s`;
    if ($status) {
        my $out = parse_status($status);
        if ($OPT{d}) {
            $out .= get_diff($repo);
        }
        if ($out) {
            print "### $dir/$repo\n";
            print $out;
            print "\n";
        }
    }
}

sub parse_status {
    my ($lines) = @_;

    my $out = "";
    chomp($lines);
    my @line = split("\n", $lines);
    for my $line (@line) {
        if ($OPT{s} && $line =~ /^\?\? /) {
            next;
        }
        $out .= "$line\n";
    }

    return $out;
}

sub get_diff {
    my ($repo) = @_;

    my $out = "";
    my $diff = `cd $repo; git diff --color`;
    if ($diff) {
        $out = "\n" . $diff;
    }

    return $out;
}
